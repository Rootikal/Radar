name,ring,quadrant,isNew,description
Decarbonisation of Land Use,Plan,Strategic,FALSE,"<p>We keep getting good feedback from teams <strong>applying product management to internal platforms</strong>. One key feature to remember, though: It's not just about team structure or renaming existing platform teams; it’s also about applying product-centric working practices within the team. Specifically, we've received feedback that teams face challenges with this technique unless they have a product-centric mindset. This likely means additional roles, such as a product manager, alongside changes to other areas, such as requirements gathering and the measurement of success. Working this way means establishing empathy with internal consumers (the development teams) and collaborating with them on the design. Platform product managers create roadmaps and ensure the platform delivers value to the business and enhances the developer experience. We continue to see this technique as key to building internal platforms to roll out new digital solutions quickly and efficiently.</p>"
ESG Regulation,Plan,Strategic,TRUE,"<p>The options for <strong>CI/CD infrastructure as a service</strong> have become so manifold and mature that the cases in which it's worth managing your entire CI infrastructure yourself are becoming very rare. Using managed services like <a href=""/radar/platforms/github-actions"">GitHub Actions</a>, <a href=""/radar/platforms/azure-devops"">Azure DevOps</a> or <a href=""/radar/platforms/gitlab-ci-cd"">Gitlab CI/CD</a> comes with all the common advantages (and trade-offs) of managed cloud services. You don't have to spend time, effort and hardware costs on maintenance and operations of this often complex infrastructure. Teams can take advantage of elasticity and self-service, whereas provisioning more of the right agents or getting a new plugin or feature are often a bottleneck in companies that host CI themselves. Even the use cases that require to run build and verification on your own hardware can now mostly be covered with self-hosted runners (we've written about some for GitHub Actions, <a href=""/radar/platforms/actions-runner-controller"">actions-runner-controller</a> and the <a href=""/radar/tools/philips-s-self-hosted-github-runner"">Philips's self-hosted GitHub runner</a>). Note, however, that you won’t get out-of-the-box security just because you are using a managed services; while mature services provide all the security features you need, you'll still need to use them to implement <a href=""/radar/techniques/zero-trust-security-for-ci-cd"">zero trust security for your CI/CD</a> infrastructure.</p>"
Rasionalisation of portfolio,Plan,Strategic,TRUE,"<p>Starter kits and templates are widely used in software projects to speed up initial setup, but they can pull in many unnecessary dependencies for a particular project. It's important to practice <strong>dependency pruning</strong> — periodically taking a hard look at these dependencies and pruning any that are not used. This helps reduce build and deploy times and decrease the project's attack surface by removing potential vulnerabilities. Although this isn't a new technique, given the increasing frequency of attacks on software supply chains, we advocate for renewed attention to it.</p>"
Part 26a Restructuring Plan,Prepare,Strategic,FALSE,"<p>Automatically estimating, tracking and predicting cloud infrastructure run cost is crucial for today's organizations. The cloud providers' savvy pricing models, combined with the proliferation of pricing parameters and the dynamic nature of today's architecture, can lead to surprisingly expensive run costs. Even though this technique has been in Adopt since 2019, we want to highlight the importance of considering <strong>run cost as an architecture fitness function</strong>, especially today, due to accelerated cloud adoption and the growing attention to FinOps practices. Many commercial platforms provide tools that can consolidate and clarify cloud costs for business leaders. Some of them are designed to show cloud run costs to finance organizations or originating business units. </p>

<p>However, cloud consumption decisions are usually made at the engineering level, where systems are designed. It's important that the engineers making design decisions have some way of predicting the cost impact of their architectural decisions. Some teams automate this prediction early in the development lifecycle. Tools like <a href=""/radar/tools/infracost"">Infracost</a> help teams predict cost impact when thinking about possible changes to infrastructure as code. This computation can be automated and woven into the CD pipeline. Note that cost will be impacted by architectural decisions combined with actual usage levels; to do this properly, you need good projections of expected usage levels. Early and frequent feedback on run cost can prevent it from soaring. When the predicted cost deviates from what was expected or acceptable, the team can discuss whether it's time to evolve the architecture.</p>"
UK Funds Regime,Prepare,Strategic,FALSE,Test writing
Breaking the Infractructure Deadlock,Monitor,Strategic,TRUE,"<p>The earlier accessibility is considered in software delivery, the easier and cheaper it is to ensure what's built works for as many people as possible. Tools that help communicate <strong>accessibility annotations in designs</strong> help teams consider important elements like document structure, semantic HTML and alternative texts from the beginning of their work. This enables them to ensure user interfaces meet global accessibility standards and address common failures that are actually fairly easy to avoid. <a href=""/radar/tools/figma"">Figma</a> offers a range of accessibility notation plugins: <a href=""https://www.figma.com/community/file/953682768192596304"">The A11y Annotation Kit</a>, Twitter's <a href=""https://www.figma.com/community/file/976946194228458698"">Accessibility Annotation Library</a> and the Axe toolset's <a href=""https://www.figma.com/community/plugin/1085612091163821851/Axe-for-Designers-(FREE)"">Axe for Designers</a>.</p>"
Property rich companies,Plan,Financial,FALSE,"<p>We've always been advocates of writing less code. Simplicity is one of the core values underlying our sensible defaults for software development. For example, we try not to anticipate needs and only introduce code that satisfies immediate business requirements and nothing else. One way to achieve this is to create engineering platforms that make this possible on an organizational basis.</p>

<p>This is also the stated aim of many low-code platforms surging in popularity right now. Platforms like <a href=""https://www.mendix.com/"">Mendix</a> or <a href=""https://powerapps.microsoft.com/"">Microsoft Power Apps</a> can expose common business processes for reuse and simplify the problems of getting new functionality deployed and in the hands of users. These platforms have made great strides in recent years with testability and support for good engineering practices. They're particularly useful for simple tasks or event-triggered apps. However, asking them to adapt to a nearly infinite range of business requirements brings complexity. Although developers might be writing less (or zero) code, they must also become experts in an all-encompassing commercial platform. We would advise businesses to consider if they need all the functionality these products bring or if they're better off pursuing <strong>bounded low-code platforms</strong>, either by developing their own <a href=""/radar/techniques/applying-product-management-to-internal-platforms"">platform as an internal product</a> or by carefully constraining the use of commercial low-code products to those simple tasks at which they excel.</p>"
Building Safety Levy,Prepare,Financial,TRUE,"<p>One of the big challenges in developing APIs is capturing and communicating their business value. APIs are, by their nature, technical artifacts. Whereas developers can easily comprehend JSON payloads, OpenAPI (<a href=""/radar/tools/swagger"">Swagger</a>) specs and <a href=""/radar/tools/postman"">Postman</a> demos, business stakeholders tend to respond better to demos they can interact with. The value of the product is more clearly articulated when you can see and touch it, which is why we sometimes find it worthwhile to invest in <strong>demo frontends for API-only products</strong>. When a custom graphical UI is built alongside an API product, stakeholders can see analogies to paper forms or reports that might be more familiar to them. As the interaction model and richness of the demo UI evolves, it allows them to make more informed decisions about the direction the API product should take. Working on the UI has the added benefit of increasing developers' empathy for business users. This isn't a new technique — we've been doing this successfully when necessary as long as API products have been around. However, because this technique isn't widely known, we thought it worthwhile calling attention to it.</p>"
Brexit,Prepare,Financial,TRUE,"<p><strong><a href=""https://www.cidrdb.org/cidr2021/papers/cidr2021_paper17.pdf"">Lakehouse architecture</a></strong> is an architectural style that combines the scalability of data lakes with the reliability and performance of data warehouses. It enables organizations to store and analyze large volumes of diverse data in a single platform as opposed to having them in separate lake and warehouse tiers, using the same familiar SQL-based tools and techniques. While the term is often associated with vendors like Databricks, open alternatives such as <a href=""/radar/platforms/delta-lake"">Delta Lake</a>, <a href=""/radar/platforms/apache-iceberg"">Apache Iceberg</a> and <a href=""/radar/platforms/apache-hudi"">Apache Hudi</a> are worth considering. Lakehouse architecture can complement <a href=""/radar/techniques/data-mesh"">data mesh</a> implementations. Autonomous data product teams can choose to leverage a Lakehouse within their data products.</p>"
Residential Property Developer Tax (RPDT),Monitor,Financial,FALSE,"<p>When we first included it in the Radar three years ago, <strong>verifiable credentials</strong> (VC) was an intriguing standard with some promising potential applications, but it wasn't widely known or understood outside the community of enthusiasts. This was particularly true when it came to the credential-granting institutions, such as state governments, who would be responsible for implementing the standards. Three years and one pandemic later, the demand for cryptographically secure, privacy-respecting and machine-verifiable electronic credentials has grown and, as a result, governments are starting to wake up to VC's potential. The <a href=""https://www.w3.org/TR/vc-data-model/"">W3C standard</a> puts credential holders at the center, which is similar to our experience when using physical credentials: users can put their verifiable credentials in their own digital wallets and show them to anyone at any time without the permission of the credentials' issuer. This decentralized approach also helps users to better manage and selectively disclose their own information which greatly improves data privacy protection.</p>

<p>Several of our teams have engaged in projects involving verifiable credentials technology in the past six months. Not surprisingly, the scenarios vary across countries and government departments. Our team has explored different combinations of decentralized identifiers, verifiable credentials and verifiable presentation on multiple projects. This is a developing field, and now that we've had more experience, we want to keep track of it in the Radar.</p>"
VAT consultation - land exemption,Monitor,Financial,TRUE,"<p>One of the many places in the software delivery process to consider accessibility requirements early on is during web component testing. Testing framework plugins like <a href=""https://www.npmjs.com/package/chai-a11y-axe"">chai-a11y-axe</a> provide assertions in their API to check for the basics. But in addition to using what testing frameworks have to offer, <strong>accessibility-aware component test design</strong> further helps to provide all the semantic elements needed by screen readers and other assistive technologies.</p>

<p>Firstly, instead of using test ids or classes to find and select the elements you want to validate, use a principle of identifying elements by <a href=""https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA"">ARIA</a> roles or other semantic attributes that are used by assistive technologies. Some testing libraries, like <a href=""https://testing-library.com/docs/queries/about/#priority"">Testing Library</a>, even recommend this in their documentation. Secondly, do not just test for click interactions; also consider users who cannot use a mouse or see the screen, and consider adding additional tests for the keyboard and other interactions.</p>"
VAT on construction,Plan,Compliance,TRUE,"<p>Like many in the software industry, we've been exploring the rapidly evolving AI tools that can support us in writing code. We see many people feed <a href=""/radar/tools/chatgpt"">ChatGPT</a> with an implementation, and then ask it to generate tests for that implementation. However, because we're big believers in TDD, and we don't always want to feed an external model with our potentially sensitive implementation code, one of our experiments in this space is a technique we call <strong><a href=""https://martinfowler.com/articles/2023-chatgpt-xu-hao.html"">AI-aided test-first development</a></strong>. In this approach, we get ChatGPT to generate tests for us, and then a developer implements the functionality. Specifically, we first describe the tech stack and the design patterns we're using in a prompt ""fragment"" that is reusable across multiple use cases. Then we describe the specific feature we want to implement, including the acceptance criteria. Based on all that, we ask ChatGPT to generate an implementation plan for that feature in our architectural style and tech stack. Once we sanity check that implementation plan, we ask it to generate tests for our acceptance criteria.</p>

<p>This approach has worked surprisingly well for us: It required the team to come up with a concise description of their architectural style and helped junior developers and new team members code features aligned with the team’s existing style. The main drawback of this approach is that even though we don't give the model our source code, we still feed it potentially sensitive information such as our tech stack and feature descriptions. Teams should ensure they're working with their legal advisors to avoid any intellectual property issues, at least until a ""for business"" version of these AI tools becomes available.</p>"
Building Safety Bill,Prepare,Compliance,TRUE,"<b>WHY?</b>
<p>
<p>
The big ticket stuff in RE in will be the introduction of the post-Grenfell changes contained in the Fire Safety Act 2021 (FSA) and Building Safety Bill (BSB) which will essentially implement the recommendations of the Hackitt Report. Intending to clarify the scope of the Regulatory Reform (Fire Safety) Order 2005, the FSA received Royal Assent and was passed into law on 29 April 2021. 


<b>WHAT SHOULD I DO?</b><p><p>
Although the FSA applies to ""domestic premises"", we consider that the broad duties in the Regulatory Reform (Fire Safety) Order 2005 still apply and that the FSA sets out a best practice approach to the management of risk in high risk
premises. The external facade of a building (including cladding, windows and balconies) should now be included in a fire risk assessment, along with doors opening to the common parts of the buildings. Fire risk assessments should therefore be reviewed and revised as soon as possible. Buildings, starting with high-rise multi-occupation, are to e ectively have a ""safety passport"" which follows them from construction through into the occupation phase, including maintenance and refurbishment, and ties into a revamped building regulations regime. Those involved in construction and management of buildings will have strict legal duties to reduce and manage building risk, complementing existing duties under the CDM and fire safety regimes, together with a digital ""golden thread"" ensuring accessibility to key design information relating to a building's safety throughout its lifetime. The reformed regime will aim to join up everything that until now has sat separately - building regs, fire safety obligations, planning and ongoing duties of care under health and safety legislation. There will be a new regulatory body in the form of the Building Safety Regulator, which sits within the Health and Safety Executive and will be up and running within 12 to 18 months but note it is already operating in shadow form. We can share knowledge pieces we have prepared already once you need them but we encourage familiarity with the changes to law as industry will need to making its preparations before the BSB (laid before Parliament on 5 July 2021), comes into force in 2023."
Environment and Sustainability,Prepare,Compliance,TRUE,"<b>WHY?</b><p><p>
The real estate sector is a major contributor to greenhouse gases and major consumer of non-renewable energy sources. Globally, there continues to be a perception that the real estate sector lags behind other sectors in its response to environmental challenges, despite a growing number of diverse environmental standards at a building, portfolio, company ESG and Government policy level. The Environment Bill (due to be passed Autumn/Winter 2021 after amendment
to facilitate reduction to sewage discharges from storm overflows) along with introducing post-Brexit governance and environmental principles also aims to deliver environmental improvements by introducing the ability to set legally binding targets relating to air quality, biodiversity, resource e ciency and waste reduction. Targets were originally due by Oct 2022 with compliance by 2037 but species targets (following on from nature positive policy changes) have already
been brought forward to 2030. Other target dates are set to follow. Developers will need to prepare for the introduction of air quality and biodiversity targets. <br><Br>
<b>WHAT SHOULD I DO?</b><p><p>
Portfolios should be reviewed (and kept under continuous review) to identify environmental and sustainability issues for potential compliance risks, introduction and changes that may be necessary to meet new targets and to strengthen ESG principles in the sector.
This could include review of: environmental compliance – particularly around permits, consents, discharges and waste duty of care (where there is increasing enforcement and significant fine and reputational risk); access to environmental information and data management; asset resilience and optimisation – especially around smart assets, HVACs, retrofit and adaptation for meeting targets, and waste and end of life considerations. This may require amendments and green lease provisions should be considered (or enhanced if already in place)."
Returning to work,Prepare,Compliance,TRUE,"<p>Team knowledge management is a familiar concept with teams using tools such as wikis to store information and onboard new team members. Some of our teams now prefer to use <strong><a href=""https://logseq.com/"">logseq</a> as a team knowledge base</strong>. An open-source knowledge-management system, loqsec is powered by a graph database, helps users organize thoughts, notes and ideas and can be adapted for team use with Git-based storage. Logseq allows teams to build a democratic and accessible knowledge base, providing each member with a personalized learning journey and facilitating efficient onboarding. However, as with any knowledge management tool, teams will need to apply good curation and management of their knowledge base to avoid information overload or disorganization.</p>

<p>While similar functionality is available in tools like <a href=""/radar/tools/obsidian"">Obsidian</a>, the key difference lies in Logseq's focus on consumption, with paragraph-based linking enabling team members to quickly find the relevant context without having to read an entire article.</p>"
Mees,Prepare,Compliance,TRUE,"<p><strong>Prompt engineering</strong> refers to the process of designing and refining prompts for generative AI models to obtain high-quality responses from the model. This involves carefully crafting prompts that are specific, clear and relevant to the desired task or application in order to elicit useful outputs from the model. Prompt engineering aims to enhance large language model (LLM) capabilities in tasks like question answering and arithmetic reasoning or in domain-specific contexts. For software creation, you might use prompt engineering to get an LLM to write a story, an API or a test suite based on a brief conversation with a stakeholder or some notes. Developing effective prompting techniques is becoming a valuable skill in working with AI systems. There is debate over whether prompt engineering is an art or science, and potential security risks, such as “prompt injection attacks,” should be considered.</p>"
Cladding,Action,Compliance,TRUE,"<p>When deploying infrastructure as code, we've noticed that a lot of time can be spent diagnosing and repairing production issues that result from systems being unable to communicate with one another. Because the network topology between them can be complex, the entire route may not be traversable even if individual ports and endpoints have been configured correctly. Infrastructure testing practices usually include verifying the right ports are open or closed or that an endpoint can be accessed, but we've only recently begun doing <strong>reachability analysis when testing infrastructure</strong>. The analysis generally involves more than simple yes/no determinations. For example, a tool might traverse and report on multiple routes through transit gateways. This technique is supported by tools across all the major cloud providers. Azure has a service called <a href=""https://learn.microsoft.com/en-us/azure/network-watcher/network-watcher-connectivity-cli"">Network Watcher</a> that can be scripted in automated tests and GCP supports <a href=""https://cloud.google.com/network-intelligence-center/docs/connectivity-tests/concepts/overview"">Connectivity Tests</a>. Now, in AWS, you can test reachability <a href=""https://aws.amazon.com/about-aws/whats-new/2022/11/amazon-vpc-reachability-analyzer-network-analysis-accounts-aws-organization/"">across accounts</a> in the same organization.</p>"
CVAs,Prepare,Asset Management,TRUE,"<p>Large language models (LLMs) generally require significant GPU infrastructure to operate. We're now starting to see ports, like <a href=""https://github.com/ggerganov/llama.cpp"">llama.cpp</a>, that make it possible to run LLMs on different hardware — including Raspberry Pis, laptops and commodity servers. As such, <strong>self-hosted LLMs</strong> are now a reality, with open-source examples including <a href=""https://huggingface.co/docs/transformers/model_doc/gptj"">GPT-J</a>, <a href=""https://huggingface.co/togethercomputer/GPT-JT-6B-v1"">GPT-JT</a> and <a href=""https://research.facebook.com/publications/llama-open-and-efficient-foundation-language-models"">LLaMA</a>. This approach has several benefits, offering better control in fine-tuning for a specific use case, improved security and privacy as well as offline access. However, you should carefully assess the capability within the organization and the cost of running such LLMs before making the decision to self-host.</p>"
Scottish land interests register,Prepare,Asset Management,TRUE,"<p>Tracking technical debt is a perennial topic in software delivery organizations. What is <a href=""https://martinfowler.com/bliki/TechnicalDebt.html"">technical debt</a> and what is not? How do you prioritize it? And most importantly, how do you express the value of paying it off to your internal stakeholders? Following the Agile Manifesto’s manner of reasoning — ""while there is value in the item on the right, we value the item on the left more"" — we like the idea of <strong>tracking health over debt</strong>. The folks at REA in Australia share a good <a href=""https://www.rea-group.com/about-us/news-and-insights/blog/what-good-software-looks-like-at-rea/"">example</a> of what such health tracking can look like. They track system ratings in the categories of development, operations and architecture.</p>

<p>Focusing on health instead of debt is a more constructive framing. It connects a team to the ultimate value of reducing debt and helps them prioritize it. Every piece of tackled technical debt should ideally be connectable to one of the agreed expectations. Teams should treat the health rating the same as other service-level objectives (SLOs) and prioritize improvements whenever they drop out of the ""green zone"" for a given category.</p>"
Coronavirus Act / Forfeiture Moratorium,Monitor,Asset Management,TRUE,"<p>If not properly secured, the infrastructure and tools that run our build and delivery pipelines can become a big liability. Pipelines need access to critical data and systems like source code, credentials and secrets to build and deploy software. This makes these systems very inviting to malicious actors. We therefore highly recommend applying <strong><a href=""/radar/techniques/zero-trust-architecture"">zero trust</a> security for CI/CD</strong> pipelines and infrastructure — trusting them as little as necessary. This encompasses a number of techniques: If available, authenticate your pipelines with your cloud provider via federated identity mechanisms like OIDC, instead of giving them direct access to secrets. Implement the principle of least privilege by minimizing the access of individual user or runner accounts, rather than employing ""god user accounts"" with unlimited access. Use your runners in an ephemeral way instead of reusing them, to reduce the risk of exposing secrets from previous jobs or running jobs on compromised runners. Keep the software in your agents and runners up to date. Monitor the integrity, confidentiality and availability of your CI/CD systems the same way you would monitor your production software.</p>

<p>We're seeing teams forget about these types of practices particularly when they’re used to working with a self-managed CI/CD infrastructure in internal network zones. While all of these practices are important in your internal networks, they become even more crucial when using a managed service, as that extends the attack surface and blast radius even more.</p>"
CIGA Moratoriums,Monitor,Asset Management,TRUE,"<p>As remote work continues to increase, so does the adoption of chat collaboration platforms and <a href=""https://www.techtarget.com/searchitoperations/definition/ChatOps"">ChatOps</a>. These platforms often offer webhooks as a simple way to automate sending messages and notifications, but we're noticing a concerning trend: the <strong>casual management of webhooks</strong> — where they’re treated as configuration rather than a secret or credential. This can lead to phishing attacks and compromised internal spaces.</p>

<p><a href=""https://en.wikipedia.org/wiki/Webhook"">Webhooks</a> are credentials that offer privileged access to an internal space and may contain API keys that can be easily extracted and utilized directly. Not treating them as secrets opens up the possibility of successful phishing attacks. Webhooks in Git repos can easily be extracted and used to send fraudulent payloads, which the user may not have any way to authenticate. To mitigate this threat, teams handling webhooks need to shift their culture and treat webhooks as sensitive credentials. Software developers building integrations with ChatOps platforms must also be mindful of this risk and ensure that webhooks are handled with proper security measures.</p>"
